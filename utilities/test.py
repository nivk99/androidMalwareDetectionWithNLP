
import os
from androidMalwareDetectionWithNLP.utilities import constants
import math
import subprocess


ls_mal =[file for root, directory, files in os.walk(constants.RAW_FILES_PATH) for file in files if file.endswith('.apk') and 'malicious' in root]
len_ls_mal = len(ls_mal)
len_ls_mal_test=math.ceil(len_ls_mal*0.2)

ls_benign=[file for root, directory, files in os.walk(constants.RAW_FILES_PATH) for file in files if file.endswith('.apk') and 'benign' in root]
len_ls_benign = len(ls_benign)
len_ls_benign_test =math.ceil(len_ls_benign*0.2)

def execute_unzip(len_ls_mal_test,len_ls_benign_test):
    for root, directory, files in os.walk(constants.RAW_FILES_PATH):
        for file in files:
            if file.endswith('.apk') and 'benign' in root:
                if len_ls_benign_test>0:
                    len_ls_benign_test = len_ls_benign_test - 1
                    if "TB" in file:
                        continue
                    else:
                        subprocess.run('mv {} {}'.format(root + "/" + file,
                                                         root + "/" + "TB" + file),
                                       shell=True,
                                       capture_output=True,
                                       text=True,
                                       check=True).stdout.split('\n')



            elif file.endswith('.apk') and 'malicious' in root:
                if len_ls_mal_test > 0:
                    len_ls_mal_test=len_ls_mal_test-1
                    if "TM" in file:
                        continue
                    else:
                        subprocess.run('mv {} {}'.format(root + "/" + file,
                                                         root + "/" + "TM" + file),
                                       shell=True,
                                       capture_output=True,
                                       text=True,
                                       check=True).stdout.split('\n')

            else:
               print('Unknown packaging. Cannot unpack the archive.')



execute_unzip(len_ls_mal_test,len_ls_benign_test)