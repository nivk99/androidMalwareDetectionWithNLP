import subprocess
import re

from androidMalwareDetectionWithNLP.utilities import constants


def extract_dex_from_apks_in_path():
    cmd_out = subprocess.run(
        'find {} -type f -name "*.dex"'.format(constants.UNPACKED_FILES_PATH),
        shell=True,
        capture_output=True,
        text=True,
        check=True).stdout.split('\n')

    # APK name list to collect APK name alone and tag the dex file with the name
    apk_names_list = []
    for index, file_path in enumerate(cmd_out):
        if len(file_path) > 0:
            file_name = re.search(constants.REGEX_PATTERN_FOR_APK, file_path).group(0)
            apk_names_list.append(file_name)
        else:
            print("Probably the end of list!")

    # Moves and tags the dex file with app name from all unpacked apks in temp folder.
    # Removes the APKs after retrieving dex files
    print("len1- ",len(apk_names_list))
    apk_names_list = set(apk_names_list)
    print("len2- ",len(apk_names_list))
    for apk in apk_names_list:
        if len(apk) > 0:
            print(apk, " - apk")
            name = re.search(constants.REGEX_PATTERN_FOR_APK_NAME, apk).group(0)
            for file_path in cmd_out:
                if name in file_path:
                    print(file_path," - file_path")
                    print(constants.EXTRACTED_DEX_DIR + name, " - constants.EXTRACTED_DEX_DIR + name")
                    subprocess.run('mv {} {}'.format(file_path, constants.EXTRACTED_DEX_DIR + name + ".dex"),
                                   shell=True,
                                   capture_output=True,
                                   text=True,
                                   check=True).stdout.split('\n')
                    subprocess.run('rm -rf {}'.format(apk),
                                   shell=True,
                                   capture_output=True,
                                   text=True,
                                   check=True)
                    break
